---
namespace: [A, B]

python_dir: [sample]

structs:
  Test1:
    json: true
    namespace: [C]
    description: "Sample struct 1."
    json_indent: 4
    expected_size: 11
    fields:
      - name: field1
        description: A field.
        type: uint8_t
        expected_offset: 0

      - name: field2
        type: Enum1
        expected_offset: 1

      - name: field3
        type: double
        expected_offset: 3

  Test2:
    json: true
    fields:
      - name: field1
        type: int8_t

      - name: field2
        description: A field.
        type: int16_t

      - name: field3
        type: float

  Test3:
    json: true
    fields: &fields
      - name: field1
        volatile: true
        type: int32_t
        description: A field.

        fields:
          - {name: bit_field1, index: 0, write: false}
          - {name: bit_field2, index: 1, read: false}
          - {name: bit_field3, index: 2}
          - {name: bit_field4, index: 3}
          - {name: bit_field5, index: 4, width: 4, type: "int8_t"}
          - {name: bit_field6, index: 8, width: 10}
          - {name: bit_field7, index: 18, width: 3, type: "C::Enum2"}

      - name: field2
        type: C::Test1
        description: Another field.

      - name: field3
        type: Test2

      - name: field4
        type: C::Enum2

      - name: field5
        type: uint16_t

  # Test scenarios where features are turned off.
  Test4:
    fields: *fields
    stream: false
  Test5:
    fields: *fields
    codec: false
  Test6:
    fields: *fields
    json: false
  Test7:
    fields: *fields
    stream: false
    codec: false
    json: false
    unit_test: false
    instances:
      - {name: "periph1", address: "0xA0000000", description: "A peripheral."}
      - {name: "periph2", address: "0xB0000000"}
      - {name: "periph3", address: "0xC0000000"}
      - {name: "periph4", address: "0xD0000000"}

  TestArrays:
    json: false
    expected_size: 169
    fields:
      - name: array1
        expected_size: 55
        type: C::Test1
        array_length: 5

      - name: array2
        expected_size: 33
        type: C::Test1
        array_length: 3

      - name: field1
        expected_size: 11
        type: C::Test1

      - name: array3
        expected_size: 40
        type: uint32_t
        array_length: 10

      - name: array4
        expected_size: 10
        type: int8_t
        array_length: 10

      - name: array5
        type: Enum1
        expected_size: 20
        array_length: 10

  Test8:
    fields:
      - name: array1
        type: C::Test1
        const: true
        array_length: 5

      - name: array2
        type: C::Test1
        volatile: true
        array_length: 5

    stream: false
    codec: false
    json: false
    methods: false

  TestPadding:
    json: false
    fields:
      - name: field1
        type: uint32_t
        expected_offset: 4

      # Starts at 8.
      - name: field2
        type: uint16_t
        expected_offset: 11

      # Starts at 13.
      - name: field3
        type: uint32_t

      # Starts at 17.
      - name: field4
        type: uint16_t
        expected_offset: 25

enums:
  Enum1:
    json: true
    underlying: uint16_t
    enum:
      A:
      B: {description: A sample value.}
      C: {value: 1000}

  Enum2:
    json: true
    use_map: false
    namespace: [C]
    description: "Sample enum 2."
    json_indent: 4
    enum: &enum
      unknown:
      red: {value: 1, description: A sample value.}
      green:
      blue: {value: 5}

  Enum3:
    json: false
    enum: *enum
